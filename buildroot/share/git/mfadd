#!/usr/bin/env bash
#
# mfadd user[:branch] [copyname]
#
# Add a remote and fetch it. Optionally copy a branch.
#
<<<<<<< HEAD
# Examples:
#  mfadd thefork
#  mfadd thefork:patch-1
#  mfadd thefork:patch-1 the_patch_12345
#

[[ $# > 0 && $# < 3 && $1 != "-h" && $1 != "--help" ]] || { echo "usage: `basename $0` user[:branch] [copyname]" 1>&2 ; exit 1; }

# If a colon or slash is included, split the parts
if [[ $1 =~ ":" || $1 =~ "/" ]]; then
  [[ $1 =~ ":" ]] && IFS=':' || IFS="/"
  read -a DATA <<< "$1"
  USER=${DATA[0]}
  BRANCH=${DATA[1]}
  NAME=${2:-$BRANCH}
=======
# Example: mfadd thinkyhead:patch-1 copy_of_patch-1
#

[[ $# > 0 && $# < 3 && $1 != "-h" && $1 != "--help" ]] || { echo "Usage: `basename $0` (user | ref copyname)" 1>&2 ; exit 1; }

# If a colon is included, split the parts
if [[ $1 =~ ":" ]]; then
  IFS=':' read -a DATA <<< "$1"
  USER=${DATA[0]}
  BRANCH=${DATA[1]}
  NAME=$2
>>>>>>> 1314b31d97bba8cd74c6625c47176d4692f57790
else
  USER=$1
fi

MFINFO=$(mfinfo) || exit 1
IFS=' ' read -a INFO <<< "$MFINFO"
REPO=${INFO[2]}

set -e

echo "Adding and fetching $USER..."
git remote add "$USER" "git@github.com:$USER/$REPO.git" >/dev/null 2>&1 || echo "Remote exists."
git fetch "$USER"

<<<<<<< HEAD
[[ ! -z "$BRANCH" && ! -z "$NAME" ]] && git checkout -b "$NAME" --track "$USER/$BRANCH"
=======
[[ ! -z "$BRANCH" && ! -z "$NAME" ]] && git checkout $USER/$BRANCH -b $NAME
>>>>>>> 1314b31d97bba8cd74c6625c47176d4692f57790
